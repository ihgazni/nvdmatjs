{"version":3,"sources":["webpack://NVDMATJS/webpack/universalModuleDefinition","webpack://NVDMATJS/webpack/bootstrap","webpack://NVDMATJS/./cmmn-utils.js","webpack://NVDMATJS/./ndfunc.js","webpack://NVDMATJS/./nvdmatjs.js","webpack://NVDMATJS/./plugin/ding.js","webpack://NVDMATJS/./plugin/conns.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getlsti","length","getlstv","simpleCompare","a","b","isArray","arr","Array","isDate","toString","isRegExp","isWindow","obj","window","isScope","$evalAsync","$watch","isFunction","isDefined","createMap","deepcopyJSON","JSON","parse","stringify","amax","map","Math","max","amin","min","afindi","v","findIndex","ele","afindv","find","getlsta","getLstSlice","lngth","slice","setlst","secdel","fsti","lsti","splice","insert","insertl","subl","norecurEq","l0","l1","k","equals","o1","o2","keySet","t1","getTime","charAt","cmmn","isRoot","nd","_pid","isFstsib","_lsibid","isLstsib","_rsibid","isLeaf","_fstchid","isNonLeaf","undefined","havingRsib","idgetnd","id","sdfsel","sdfselGetMaxId","newNode","idpool","currid","leafize","getLsib","getRsib","getPrecedingSibs","preceding","push","reverse","getFollowingSibs","following","getFstsib","getLstsib","lstsib","getAllSibs","concat","getFstch","getChild","which","child","rsib","getChildren","children","fstch","getLstch","lstch","getParent","getAllAnces","ances","getAllAncesIncludingSelf","getAnces","getFstAncesHavingRsibIncludingSelf","cond","calcDepth","depth","getRsibOfFstAncesHavingRsibIncludingSelf","getRdmost","prev","rdmost","sdfsNext","next","isAncesOf","nd0","nd1","_id","isAncesOfIncludingSelf","getAllDesesIncludingSelf","deses","_updateDepth","ndepth","incr","_depth","_nonfstsibize","_fstsibize","_arg2SubAndNrnd","arg","subsdfsel","nrnd","addRsib","console","log","index","_lstsibAppendRsib","_insertRsib","_rootize","_deUpdateDepth","decr","getDesFstiAndLsti","rmFstch","sndch","rmFstsib","rmRsib","rrsib","rmSelf","rslt","isFstch","isFstchButNotLstch","isFstsibButNotLstsib","isLstch","isLstchButNotFstch","isLstsibButNotFstsib","isFstchAndLstch","isFstsibAndLstsib","isMidch","isMidsib","isUndefined","havingLsib","eq","subsdfselResetId","newIdPool","newRoot","newFstsib","newMidsib","newLstsib","newLeafFstsib","newLeafMidsib","newLeafLstsib","newLeafLonelySib","getSib","getAncesIncludingSelf","getDepth","getSibseq","getBreadth","childrens","nds","sdfsPrev","lsib","isDesOf","isDesOfIncludingSelf","getAllDeses","shift","getFlatWidth","filter","getFlatOffset","pre","addLsib","_fstsibPrependLsib","_insertLsib","addFstch","addLstch","rmLstsib","sndlstsib","rmLsib","llsib","rmChild","ndfunc","ding","conns","IDPOOL","text","expanded","display","type","newPlusNode","getPairPlusnd","plusndAddRsib","plusnd","pairPlusnd","childPlusnd","indexndAddRsib","indexndAddFstch","ndAddRsib","ndAddFstch","textGetNd","ndRmSelf","enableEdit","forEach","disableEdit","ndUnexpandAll","ndExpandAll","ndExpand","initSdfsel","rnd","getPairIndexNd","getAllPlusnd","getAllIndexNd","textGetSdfsi","textAddRsib","txt","textAddFstch","txtRmself","txtUnexpandAll","txtExpandAll","txtExpand","rootUnexpandAll","rootExpandAll","disp","repeat","CONND","CONN_WIDTH","tag","checked","leaf","_conns","connWidth","_calcConnMapFunc","calcAndSetConnsWhenAddFstch","pnd","calcAndSetConnsWhenAddLstch","join","_dispOne","ndAndTagAddLsib","nnd","calcAndSetConnsWhenAddLsib","ndAndTagAddRsib","calcAndSetConnsWhenAddRsib","ndAndTagAddLstch","calcAndSetConnsWhenAddRmSelf"],"mappings":"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","file":"nvdmatjs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NVDMATJS\"] = factory();\n\telse\n\t\troot[\"NVDMATJS\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\nfunction deepcopyJSON(o) {\n    return(JSON.parse(JSON.stringify(o)))\n}\n\n/*\n    a    attr\n    i    index\n    v    value\n*/\nfunction amax(a,l) {\n    let arr = l.map(r=>r.a)\n    return(Math.max(...arr))\n}\n\nfunction amin(a,l) {\n    let arr = l.map(r=>r.a)\n    return(Math.min(...arr))\n}\n\nfunction afindi(a,v,l) {\n    let i = l.findIndex(ele=>(ele[a]===v))\n    return(i)\n}\n\nfunction afindv(a,v,l) {\n    let r = l.find(ele=>(ele[a]===v))\n    return(r)\n}\n\n\nfunction getlsti(l) {\n    return(l.length -1)\n}\n\nfunction getlstv(l) {\n    return(l[getlsti(l)])\n}\n\nfunction getlsta(a,l) {\n    return(getlstv(l)[a])\n}\n\nfunction getLstSlice(lngth,l) {\n    return(l.slice(l.length-lngth))\n}\n\nfunction secdel(fsti,lsti,l) {\n    let c = lsti - fsti + 1 \n    l.splice(fsti,c)\n    return(l)\n}\n\nfunction insert(i,v,l) {\n    l.splice(i,0,v)\n    return(l)\n}\n\nfunction insertl(i,subl,l) {\n     l.splice(i,0,...subl)\n     return(l)\n}\n\nfunction setlst(v,l) {\n    l[l.length-1] = v\n    return(l)\n}\n\n\nfunction norecurEq(l0,l1) {\n    let rslt = true\n    for(let i=0;i<l0.length;i++) {\n        let cond = (l0[k] === l1[k])\n        if(cond === false) {\n            return(false)\n        }\n    }\n    return(rslt)\n}\n\nfunction simpleCompare(a, b) {\n    return a === b || a !== a && b !== b;\n}\n\nfunction isArray(arr) {\n    return Array.isArray(arr) || arr instanceof Array;\n}\n\nfunction isDate(value) {\n    return toString.call(value) === '[object Date]';\n}\n\nfunction isRegExp(value) {\n    return toString.call(value) === '[object RegExp]';\n}\n\n\nfunction isWindow(obj) {\n    return obj && obj.window === obj;\n}\nfunction isScope(obj) {\n    return obj && obj.$evalAsync && obj.$watch;\n}\n\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\n\nfunction isDefined(value) {\n    return typeof value !== 'undefined';\n}\n\n\nfunction createMap() {\n    return Object.create(null);\n}\n\n\nfunction equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true;\n    var t1 = typeof o1, t2 = typeof o2, length, key, keySet;\n    if (t1 === t2 && t1 === 'object') {\n        if (isArray(o1)) {\n            if (!isArray(o2))\n                return false;\n            if ((length = o1.length) === o2.length) {\n                for (key = 0; key < length; key++) {\n                    if (!equals(o1[key], o2[key]))\n                        return false;\n                }\n                return true;\n            }\n        } else if (isDate(o1)) {\n            if (!isDate(o2))\n                return false;\n            return simpleCompare(o1.getTime(), o2.getTime());\n        } else if (isRegExp(o1)) {\n            if (!isRegExp(o2))\n                return false;\n            return o1.toString() === o2.toString();\n        } else {\n            if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) || isArray(o2) || isDate(o2) || isRegExp(o2))\n                return false;\n            keySet = createMap();\n            for (key in o1) {\n                if (key.charAt(0) === '$' || isFunction(o1[key]))\n                    continue;\n                if (!equals(o1[key], o2[key]))\n                    return false;\n                keySet[key] = true;\n            }\n            for (key in o2) {\n                if (!(key in keySet) && key.charAt(0) !== '$' && isDefined(o2[key]) && !isFunction(o2[key]))\n                    return false;\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\n\nmodule.exports = {\n    deepcopyJSON,\n    amax,\n    amin,\n    afindi,\n    afindv,\n    getlsti,\n    getlstv,\n    getlsta,\n    getLstSlice,\n    setlst,\n    secdel,\n    insert,\n    insertl,\n    norecurEq,\n    simpleCompare,\n    isArray,\n    isDate,\n    isRegExp,\n    isWindow,\n    isScope,\n    isFunction,\n    isDefined,\n    createMap,\n    equals\n}\n\n\n","const cmmn = require(\"./cmmn-utils.js\")\n\n\n/*\n    _fstchid                              fst-child-id\n    _lsibid                               lsib-id\n    _rsibid                               rsib-id\n    _id                                   unique-number-id-based-on-add\n    _pid                                  parent-id\n    rid                                   root-id\n    getLsib                               get-left-sibling\n    getRsib                               get-right-sibling\n    getPrecedingSibs                      get-preceding-siblings\n    getFollowingSibs                      get-following-siblings\n    fstsib                                fst-sibling\n    midsib                                middle-sibling\n    lstsib                                lst-sibling\n    sib                                   sibling\n    sibs                                  siblings\n    getFstsib                             get-first-sibling-including-self\n    getLstsib                             get-last-sibling-including-self\n    getSib                                get-sibling-including-self\n    getAllSibs                            get-all-siblings-including-self\n    fstch                                 first-child\n    lstch                                 last-child\n    child                                 child\n    getFstch                              get-first-child\n    getLstch                              get-last-child\n    getChild                              get-child\n    getChildren                           get-children\n    p                                     parent\n    ances                                 ancestor\n    ancestors                             ancestors\n    getParent                             get-parent\n    getAllAnces                           get-all-ancestors\n    getAllAncesIncludingSelf              get-all-ancestors-including-self\n    getAnces                              get-ancestor\n    getAncesIncludingSelf                 get-ancestor-including-self\n    getFstAncesHavingRsibIncludingSelf    get-first-ancestor-having-rsib-including-self\n    getRdmost                             get-rdmost\n    getAllDeses                           get-all-descendants\n    getAllDesesIncludingSelf              get-all-descendants-including-self\n*/\n\n////\nfunction isRoot(nd) {\n    return(nd._pid === null)\n}\n\nfunction isFstch(nd) {\n    return(\n        nd._lsibid === null &&\n        nd._pid !== null\n    )\n}\n\nfunction isFstsib(nd) {\n    return(\n        nd._lsibid === null\n    )\n}\n\n\nfunction isFstchButNotLstch(nd) {\n    return(\n        nd._rsibid !== null && \n        nd._rsibid !== undefined && \n        nd._lsibid === null &&\n        nd._pid !== null\n    )\n}\n\n\n\nfunction isFstsibButNotLstsib(nd) {\n    return(\n        nd._rsibid !== null &&\n        nd._rsibid !== undefined &&\n        nd._lsibid === null\n    )\n}\n\n\nfunction isLstch(nd) {\n    return(\n        nd._rsibid === null &&\n        nd._pid !== null \n    )\n}\n\nfunction isLstsib(nd) {\n    return(\n        nd._rsibid === null \n    )\n}\n\n\nfunction isLstchButNotFstch(nd) {\n    return(\n        nd._rsibid === null && \n        nd._lsibid !== null &&\n        nd._lsibid !== undefined &&\n        nd._pid !== null\n    )\n}\n\n\nfunction isLstsibButNotFstsib(nd) {\n    return(\n        nd._rsibid === null &&\n        nd._lsibid !== null &&\n        nd._lsibid !== undefined\n    )\n}\n\n\nfunction isFstchAndLstch(nd) {\n    return( \n        nd._lsibid === null && \n        nd._rsibid === null &&\n        nd._pid !== null\n    )\n}\n\nfunction isFstsibAndLstsib(nd) {\n    return( \n        nd._lsibid === null && \n        nd._rsibid === null\n    )\n}\n\n\nfunction isMidch(nd) {\n    return( \n        nd._lsibid !== null && \n        nd._lsibid !== undefined &&\n        nd._rsibid !== null &&\n        nd._rsibid !== undefined &&\n        nd._pid !== null\n    )\n}\n\n\nfunction isMidsib(nd) {\n    return(\n        nd._lsibid !== null &&\n        nd._lsibid !== undefined &&\n        nd._rsibid !== null &&\n        nd._rsibid !== undefined \n    )\n}\n\n\nfunction isLeaf(nd) {\n    return(nd._fstchid === null)\n}\n\nfunction isNonLeaf(nd) {\n    return(\n        nd._fstchid !== null &&\n        nd._fstchid !== undefined\n    )\n}\n\nfunction isUndefined(nd) {\n    return(nd._fstchid === undefined)\n}\n\n////\nfunction havingLsib(nd) {\n    return(\n        nd._lsibid !== null && \n        nd._lsibid !== undefined\n    )\n}\n\nfunction havingRsib(nd) {\n    return(\n        nd._rsibid !== null && \n        nd._rsibid !== undefined\n    )\n}\n\n////\n\nfunction idgetnd(id,sdfsel) {\n    /*\n        id could be a number or null\n    */\n    let nd = (id === null) ? null : cmmn.afindv('_id',id,sdfsel)\n    return(nd)\n}\n\nfunction eq(nd0,nd1) {\n    let rslt = true\n    for(let k in nd0) {\n        let cond = (nd0[k] === nd1[k])\n        if(cond === false) {\n            return(false)\n        }\n    }\n    return(rslt)\n}\n\n////new\n\nfunction sdfselGetMaxId(sdfsel) {\n    return(cmmn.amax('_id',sdfsel))\n}\n\n\nfunction newIdPool(sdfsel) {\n    let d = {\n        currid:0\n    }\n    if( sdfsel === undefined){\n\n    } else {\n        d.currid = sdfselGetMaxId(sdfsel) + 1\n    }\n    return(d)\n}\n\nfunction newNode(idpool) {\n    /*\n        var idpool = newIdPool()\n        var nd = newNode(idpool)\n    */\n    let d = {\n        \"_fstchid\":undefined,\n        \"_lsibid\":undefined,\n        \"_rsibid\":undefined,\n        \"_id\":idpool.currid,\n        \"_pid\":undefined,\n        \"_depth\":0,\n    }\n    idpool.currid = idpool.currid + 1\n    return(d)\n}\n\nfunction newRoot(idpool) {\n    let d = newNode(idpool)\n    d._lsibid = null\n    d._rsibid = null\n    d._pid = null\n    d._depth = 0\n    return(d)\n}\n\n\nfunction newFstsib(idpool) {\n    let d = newNode(idpool)\n    d._lsibid = null\n    return(d)\n}\n\nfunction newMidsib(idpool) {\n    let d = newNode(idpool)\n    return(d)\n}\n\nfunction newLstsib(idpool) {\n    let d = newNode(idpool)\n    d._rsibid = null\n    return(d)\n}\n\nfunction leafize(nd) {\n    nd._fstchid = null\n    return(nd)\n}\n\nfunction newLeafFstsib(idpool) {\n    let d = newNode(idpool)\n    d._lsibid = null\n    d._fstchid = null\n    return(d)\n}\n\nfunction newLeafMidsib(idpool) {\n    let d = newNode(idpool)\n    d._fstchid = null\n    return(d)\n}\n\nfunction newLeafLstsib(idpool) {\n    let d = newNode(idpool)\n    d._rsibid = null\n    d._fstchid = null\n    return(d)\n}\n\nfunction newLeafLonelySib(idpool) {\n    let d = newNode(idpool)\n    d._lsibid = null\n    d._rsibid = null\n    d._fstchid = null\n    return(d)\n}\n\n////function getRoot(l) {} 乱序寻找\n\n\n////function sdfslize(l){} 乱序重拍\n\n////sib\n\nfunction getLsib(nd,sdfsel) {\n    let lsib = idgetnd(nd._lsibid,sdfsel)\n    return(lsib)\n}\n\nfunction getRsib(nd,sdfsel) {\n    let rsib = idgetnd(nd._rsibid,sdfsel)\n    return(rsib)\n}\n\nfunction getPrecedingSibs(nd,sdfsel) {\n    let preceding = []\n    while(nd !== null) {\n        nd = getLsib(nd,sdfsel)\n        if(nd === null) {\n            break\n        } else {\n            preceding.push(nd)\n        }\n    }\n    preceding.reverse()\n    return(preceding)\n}\n\nfunction getFollowingSibs(nd,sdfsel) {\n    let following = []\n    while(nd !== null) {\n        nd = getRsib(nd,sdfsel)\n        if(nd === null) {\n            break\n        } else {\n            following.push(nd)\n        }\n    }\n    return(following)\n}\n\nfunction getFstsib(nd,sdfsel) {\n    /*\n        including-self\n    */\n    let preceding = getPrecedingSibs(nd,sdfsel)\n    let fstsib = (preceding.length === 0) ? nd : preceding[0]\n    return(fstsib)\n}\n\nfunction getLstsib(nd,sdfsel) {\n    let following = getFollowingSibs(nd,sdfsel)\n    let lstsib = (following.length === 0) ? nd : cmmn.getlstv(following)\n    lstsib = (lstsib === undefined)? null:lstsib\n    return(lstsib)\n}\n\nfunction getAllSibs(nd,sdfsel) {\n    /*\n        including-self\n    */\n    let preceding = getPrecedingSibs(nd,sdfsel)\n    let following = getFollowingSibs(nd,sdfsel)\n    let sibs = Array.prototype.concat(preceding,[nd],following)\n    return(sibs)\n}\n\nfunction getSib(which,nd,sdfsel) {\n    /*\n        including-self\n    */\n    let sibs = getAllSibs(nd,sdfsel)\n    return(sibs[which])\n}\n\n\n////child,children\n\nfunction getFstch(nd,sdfsel) {\n    /*\n        get-first-child\n    */\n    let fstch = idgetnd(nd._fstchid,sdfsel)\n    return(fstch)\n}\n\nfunction getChild(which,nd,sdfsel) {\n    /*\n        get-child-by-index\n    */\n    if(isLeaf(nd)){\n        return(null)\n    } else {\n        let c = 0\n        let child = getFstch(nd,sdfsel)\n        let rsib = getRsib(child,sdfsel)\n        while(c<which) {\n            if(rsib !== null) {\n                child = rsib\n                rsib = getRsib(child,sdfsel)\n            } else {\n                break\n            }\n            c = c + 1\n        }\n        child = (c < which) ? null : child\n        return(child)\n    }\n}\n\nfunction getChildren(nd,sdfsel) {\n    /*\n        get-children\n    */\n    let children = []\n    if(isLeaf(nd)){\n        \n    } else {\n        let fstch = getFstch(nd,sdfsel)\n        children.push(fstch)\n        children = children.concat(getFollowingSibs(fstch,sdfsel))\n    }\n    return(children)\n}\n\nfunction getLstch(nd,sdfsel) {\n    /*\n        get-last-child\n    */\n    let children = getChildren(nd,sdfsel)\n    let lstch = cmmn.getlstv(children)\n    lstch = (lstch === undefined)? null:lstch\n    return(lstch)\n}\n\n////parent,ances,ances-including-self\n\nfunction getParent(nd,sdfsel) {\n    let fstsib = getFstsib(nd,sdfsel)\n    let p = idgetnd(fstsib._pid,sdfsel)\n    return(p)\n}\n\nfunction getAllAnces(nd,sdfsel) {\n    let ances = []\n    let p = getParent(nd,sdfsel)\n    while(p !== null){\n        ances.push(p)\n        p = getParent(p,sdfsel)\n    }\n    return(ances)\n}\n\n\nfunction getAllAncesIncludingSelf(nd,sdfsel) {\n    let ances = getAllAnces(nd,sdfsel)\n    return(Array.prototype.concat([nd],ances))\n}\n\nfunction getAnces(which,nd,sdfsel){\n    let p = getParent(nd,sdfsel)\n    let c = 0\n    while(p !== null){\n        if(c<which) {\n            p = getParent(p,sdfsel)\n            c = c + 1\n        } else {\n            break\n        }\n    }\n    return(p)\n}\n\nfunction getAncesIncludingSelf(which,nd,sdfsel){\n    if(which === 0) {\n        return(nd)\n    } else {\n        return(getAnces(which-1,nd,sdfsel))\n    }\n}\n\nfunction getFstAncesHavingRsibIncludingSelf(nd,sdfsel) {\n    let cond = havingRsib(nd)\n    while(!cond) {\n        nd = getParent(nd,sdfsel)\n        if(nd === null) {\n            break\n        } else {\n            cond = havingRsib(nd)\n        }\n    }\n    return(nd)\n}\n\n\n////\n\nfunction calcDepth(nd,sdfsel) {\n    let depth = 0\n    let p = getParent(nd,sdfsel)\n    while(p !== null){\n        p = getParent(p,sdfsel)\n        depth = depth + 1\n    }\n    return(depth)\n}\n\nfunction getDepth(nd,sdfsel) {\n    let depth = (nd._depth === undefined) ? calcDepth(nd,sdfsel) : nd._depth\n    return(depth)\n}\n\nfunction getSibseq(nd,sdfsel) {\n    let preceding = getPrecedingSibs(nd,sdfsel)\n    return(preceding.length)\n}\n\nfunction getBreadth(nd,sdfsel) {\n    let p = getParent(nd,sdfsel)\n    let ppreceding = getPrecedingSibs(p,sdfsel)\n    let childrens = ppreceding.map((nd)=>(getChildren(nd,sdfsel)))\n    let nds = Array.prototype.concat(...childrens)\n    let preceding = getPrecedingSibs(nd,sdfsel)\n    return(nds.length+preceding.length)\n}\n\n\n////\n\nfunction getRsibOfFstAncesHavingRsibIncludingSelf(nd,sdfsel) {\n    let ances = getFstAncesHavingRsibIncludingSelf(nd,sdfsel)\n    if(ances === null) {\n        return(null)\n    } else {\n        let rsib = getRsib(ances,sdfsel)\n        return(rsib)\n    }\n}\n\n\nfunction getRdmost(nd,sdfsel) {\n    let prev = nd\n    let rdmost = getLstch(prev,sdfsel)\n    while(rdmost !== null) {\n        prev = rdmost\n        rdmost = getLstch(prev,sdfsel)\n    }\n    return(prev)\n}\n\nfunction sdfsNext(nd,sdfsel) {\n    let next;\n    let fstch = getFstch(nd,sdfsel)\n    if(fstch === null) {\n        next = getRsibOfFstAncesHavingRsibIncludingSelf(nd,sdfsel)\n    } else {\n        next = fstch\n    }\n    return(next)\n}\n\nfunction sdfsPrev(nd,sdfsel) {\n    let prev;\n    let lsib = getLsib(nd,sdfsel)\n    if(lsib === null) {\n        prev = getParent(nd,sdfsel)\n    } else {\n        prev = getRdmost(lsib,sdfsel)\n    }\n    return(prev)\n}\n\n////\nfunction isAncesOf(nd0,nd1,sdfsel) {\n    let ances = getAllAnces(nd1,sdfsel)\n    let index = cmmn.afindi('_id',nd0._id,ances)\n    return(index>=0)\n}\n\nfunction isDesOf(nd0,nd1,sdfsel) {\n    return(isAncesOf(nd1,nd0,sdfsel))\n}\n\nfunction isAncesOfIncludingSelf(nd0,nd1,sdfsel) {\n    let ances = getAllAncesIncludingSelf(nd1,sdfsel)\n    let index = cmmn.afindi('_id',nd0._id,ances)\n    return(index>=0)\n}\n\nfunction isDesOfIncludingSelf(nd0,nd1,sdfsel) {\n    return(isAncesOfIncludingSelf(nd1,nd0,sdfsel))\n}\n\n////descendants\n\nfunction getAllDesesIncludingSelf(nd,sdfsel) {\n    let deses = []\n    let root = nd\n    while(nd!==null && isAncesOfIncludingSelf(root,nd,sdfsel)) {\n        deses.push(nd)\n        nd  = sdfsNext(nd,sdfsel)\n    }\n    return(deses)\n}\n\nfunction getAllDeses(nd,sdfsel) {\n    let deses = getAllDesesIncludingSelf(nd,sdfsel)\n    deses.shift()\n    return(deses)\n}\n\n\nfunction getFlatWidth(nd,sdfsel) {\n    let deses=getAllDesesIncludingSelf(nd,sdfsel)\n    return(deses.filter(isLeaf).length)\n}\n\nfunction getFlatOffset(nd,sdfsel) {\n    let index = sdfsel.findIndex(r=>(r._id === nd._id))\n    let pre = sdfsel.slice(0,index)\n    pre = pre.filter(isLeaf)\n    return(pre.length)\n}\n\n\n/*\n *\n */\n\n\nfunction _updateDepth(ndepth,sdfsel) {\n    let incr = ndepth - sdfsel[0]._depth\n    sdfsel = sdfsel.map(r=>{\n        r._depth = r._depth + incr\n        return(r)\n    })\n    return(sdfsel)\n}\n\n\nfunction _nonfstsibize(nd) {\n    nd._pid = undefined\n    return(nd)\n}\n\nfunction _fstsibize(nd) {\n    nd._lsibid = null\n    return(nd)\n}\n\nfunction _lstsibize(nd) {\n    nd._pid = undefined\n    nd._rsibid = null\n    return(nd)\n}\n\nfunction _arg2SubAndNrnd(arg) {\n    let subsdfsel;\n    let nrnd;\n    if(cmmn.isArray(arg)) {\n        subsdfsel = arg\n        nrnd = subsdfsel[0]\n    } else {\n        subsdfsel = [arg]\n        nrnd = arg\n    }\n    return([subsdfsel,nrnd])\n}\n\nfunction _insertLsib(nd,sdfsel,arg) {\n    let [subsdfsel,nrnd] = _arg2SubAndNrnd(arg);\n    let ndepth = nd._depth\n    subsdfsel = _updateDepth(ndepth,subsdfsel)\n    let lsib = getLsib(nd,sdfsel)\n    lsib._rsibid = nrnd._id\n    nrnd._lsibid = lsib._id\n    nd._lsibid = nrnd._id\n    nrnd._rsibid = nd._id\n    nrnd = _nonfstsibize(nrnd)\n    let index = cmmn.afindi('_id',nd._id,sdfsel)\n    sdfsel = cmmn.insertl(index,subsdfsel,sdfsel)\n    return(sdfsel)\n}\n\nfunction _fstsibPrependLsib(nd,sdfsel,arg) {\n    let [subsdfsel,nrnd] = _arg2SubAndNrnd(arg)\n    let ndepth = nd._depth\n    subsdfsel = _updateDepth(ndepth,subsdfsel)\n    let p = getParent(nd,sdfsel)\n    p._fstchid = nrnd._id\n    nrnd._pid = p._id\n    nd._pid = undefined\n    nrnd._lsibid = null\n    nrnd._rsibid = nd._id\n    nd._lsibid = nrnd._id\n    let index = cmmn.afindi('_id',nd._id,sdfsel)\n    sdfsel = cmmn.insertl(index,subsdfsel,sdfsel)\n    return(sdfsel)\n}\n\n\nfunction addLsib(nd,sdfsel,arg) {\n    /*\n        rnd  can NOT addLsib\n        fstch \n        nonfstch\n        return([nd,nnd])\n    */\n    if(isRoot(nd)) {\n        console.log(\"rnd  can NOT addLsib\")\n    } else {\n        if(isFstsib(nd))  {\n            sdfsel = _fstsibPrependLsib(nd,sdfsel,arg)\n        } else {\n            sdfsel = _insertLsib(nd,sdfsel,arg)\n        }\n    }\n    return(sdfsel)\n}\n\nfunction _lstsibAppendRsib(nd,sdfsel,arg) {\n    let [subsdfsel,nrnd] = _arg2SubAndNrnd(arg)\n    let ndepth = nd._depth\n    subsdfsel = _updateDepth(ndepth,subsdfsel)\n    nrnd._lsibid = nd._id\n    nd._rsibid = nrnd._id\n    nrnd = _nonfstsibize(nrnd)\n    let rdmost = getRdmost(nd,sdfsel)\n    let index = cmmn.afindi('_id',rdmost._id,sdfsel)\n    sdfsel = cmmn.insertl(index+1,subsdfsel,sdfsel)\n    return(sdfsel)\n}\n\nfunction _insertRsib(nd,sdfsel,arg) {\n    let [subsdfsel,nrnd] = _arg2SubAndNrnd(arg)\n    let ndepth = nd._depth\n    subsdfsel = _updateDepth(ndepth,subsdfsel)\n    let rsib = getRsib(nd,sdfsel)\n    rsib._lsibid = nrnd._id\n    nrnd._rsibid = rsib._id\n    nd._rsibid = nrnd._id\n    nrnd._lsibid = nd._id\n    nrnd = _nonfstsibize(nrnd)\n    let rdmost = getRdmost(nd,sdfsel)\n    let index = cmmn.afindi('_id',rdmost._id,sdfsel)\n    sdfsel = cmmn.insertl(index+1,subsdfsel,sdfsel)\n    return(sdfsel)\n}\n\n\nfunction addRsib(nd,sdfsel,arg) {\n    if(isRoot(nd)) {\n        console.log(\"rnd  can NOT addRsib\")\n        return(sdfsel)\n    } else {\n        if(isLstsib(nd))  {\n            sdfsel = _lstsibAppendRsib(nd,sdfsel,arg)\n        } else {\n            sdfsel = _insertRsib(nd,sdfsel,arg)\n        }\n    }\n    return(sdfsel)\n}\n\n\n\n////\n\nfunction addFstch(nd,sdfsel,arg) {\n    let [subsdfsel,nrnd] = _arg2SubAndNrnd(arg)\n    let ndepth = nd._depth + 1\n    subsdfsel = _updateDepth(ndepth,subsdfsel)\n    if(isNonLeaf(nd)) {\n        console.log(\"nonleaf  can NOT addFstch\")\n        return(sdfsel)\n    } else {\n        nd._fstchid = nrnd._id\n        nrnd._pid = nd._id\n        nrnd = _fstsibize(nrnd)\n    }\n    let index = cmmn.afindi('_id',nd._id,sdfsel)\n    sdfsel = cmmn.insertl(index+1,subsdfsel,sdfsel)\n    return(sdfsel)\n}\n\n\nfunction addLstch(nd,sdfsel,arg) {\n    let oldLstch = getLstch(nd,sdfsel)\n    return(addRsib(oldLstch,sdfsel,arg))\n}\n\n\n\nfunction _rootize(nd) {\n    nd._lsibid = null\n    nd._rsibid = null\n    nd._pid = null\n    return(nd)\n}\n\nfunction _deUpdateDepth(sdfsel) {\n    let decr = sdfsel[0]._depth\n    sdfsel = sdfsel.map(r=>{\n        r._depth = r._depth - decr\n        return(r)\n    })\n    return(sdfsel)\n}\n\nfunction getDesFstiAndLsti(nd,sdfsel) {\n    let subsdfsel = getAllDesesIncludingSelf(nd,sdfsel)\n    let fsti = cmmn.afindi('_id',subsdfsel[0]._id,sdfsel)\n    let lsti = fsti + subsdfsel.length - 1\n    return([fsti,lsti])\n}\n\nfunction rmFstch(nd,sdfsel) {\n    let subsdfsel;\n    let fstch = getFstch(nd,sdfsel)\n    if(fstch !== null) {\n        let [fsti,lsti] = getDesFstiAndLsti(fstch,sdfsel)\n        subsdfsel = sdfsel.slice(fsti,lsti+1)\n        let sndch = getRsib(fstch,sdfsel)\n        if(sndch === null) {\n            //only-one-child\n            nd = leafize(nd)\n        } else {\n            nd._fstchid = sndch._id\n            sndch._pid = nd._id\n            sndch = _fstsibize(sndch)\n        }\n        subsdfsel = _deUpdateDepth(subsdfsel)\n        fstch = _rootize(fstch)\n        sdfsel = cmmn.secdel(fsti,lsti,sdfsel)\n    } else {\n        subsdfsel = []\n    }\n    return([sdfsel,subsdfsel])\n}\n\n\nfunction rmFstsib(nd,sdfsel) {\n    let fstsib = getFstsib(nd,sdfsel)\n    let p = getParent(fstsib,sdfsel)\n    if(p === null) {\n        return([[],sdfsel])\n    } else {\n        return(rmFstch(p,sdfsel))\n    }\n}\n\nfunction rmRsib(nd,sdfsel) {\n    let subsdfsel;\n    let rsib = getRsib(nd,sdfsel)\n    if(rsib === null){\n        subsdfsel = []\n    } else {\n        let [fsti,lsti] = getDesFstiAndLsti(rsib,sdfsel)\n        subsdfsel = sdfsel.slice(fsti,lsti+1)\n        let rrsib = getRsib(rsib,sdfsel)\n        if(rrsib === null) {\n            nd._rsibid = null \n        } else {\n            nd._rsibid = rrsib._id\n            rrsib._lsibid = nd._id\n        }\n        subsdfsel = _deUpdateDepth(subsdfsel)\n        rsib = _rootize(rsib)\n        sdfsel = cmmn.secdel(fsti,lsti,sdfsel)\n    }\n    return([sdfsel,subsdfsel])\n}\n\n\nfunction rmLstsib(nd,sdfsel) {\n    let lstsib = getLstsib(nd,sdfsel)\n    let sndlstsib = getLsib(lstsib,sdfsel)\n    if(sndlstsib === null) {\n        return(rmFstsib(nd,sdfsel))\n    } else { \n        return(rmRsib(sndlstsib,sdfsel))\n    }\n}\n\nfunction rmLsib(nd,sdfsel) {\n    let subsdfsel;\n    let lsib = getLsib(nd,sdfsel)\n    if(lsib === null){\n        subsdfsel = []\n    } else {\n        let [fsti,lsti] = getDesFstiAndLsti(lsib,sdfsel)\n        subsdfsel = sdfsel.slice(fsti,lsti+1)\n        let llsib = getLsib(lsib,sdfsel)\n        if(llsib === null) {\n            nd._lsibid = null\n            nd._pid = lsib._pid\n            let p = getParent(nd,sdfsel)\n            p._fstchid = lsib._id\n        } else {\n            nd._lsibid = llsib._id\n            llsib._rsibid = nd._id\n        }\n        subsdfsel = _deUpdateDepth(subsdfsel)\n        lsib = _rootize(lsib)\n        sdfsel = cmmn.secdel(fsti,lsti,sdfsel)\n    }\n    return([sdfsel,subsdfsel])\n}\n\n\n////\n////\n////\n\nfunction rmSelf(nd,sdfsel) {\n    let rslt;\n    if(isRoot(nd)) {\n        rslt = [[],sdfsel]\n    } else if(isFstsib(nd)) {\n        let p = getParent(nd,sdfsel)\n        rslt = rmFstch(p,sdfsel)\n    } else {\n        let lsib = getLsib(nd,sdfsel)\n        rslt =  rmRsib(lsib,sdfsel)\n    }\n    return(rslt)\n}\n\nfunction rmChild(which,nd,sdfsel)  {\n    let child = getChild(which,nd,sdfsel)\n    if(child === null) {\n        return([sdfsel,[]])\n    } else {\n        return(rmSelf(child,sdfsel))\n    }\n}\n\n////\n//\nfunction subsdfselResetId(subsdfsel,sdfsel,idpool) {\n    let maxId = sdfselGetMaxId(sdfsel)\n    let id = maxId+1\n    for(let i=0;i<subsdfsel.length;i++) {\n        subsdfsel[i]._id = id\n        id = id+1\n    }\n    idpool.currid = id\n    return([subsdfsel,sdfsel,idpool])\n}\n\n\n//\n////\n\n\nmodule.exports = {\n    isRoot,\n    isFstch,\n    isFstsib,\n    isFstchButNotLstch,\n    isFstsibButNotLstsib,\n    isLstch,\n    isLstsib,\n    isLstchButNotFstch,\n    isLstsibButNotFstsib,\n    isFstchAndLstch,\n    isFstsibAndLstsib,\n    isMidch,\n    isMidsib,\n    isLeaf,\n    isNonLeaf,\n    isUndefined,\n    havingLsib,\n    havingRsib,\n    idgetnd,\n    eq,\n    sdfselGetMaxId,\n    subsdfselResetId,\n    newIdPool,\n    newNode,\n    newRoot,\n    newFstsib,\n    newMidsib,\n    newLstsib,\n    leafize,\n    newLeafFstsib,\n    newLeafMidsib,\n    newLeafLstsib,\n    newLeafLonelySib,\n    getLsib,\n    getRsib,\n    getPrecedingSibs,\n    getFollowingSibs,\n    getFstsib,\n    getLstsib,\n    getAllSibs,\n    getSib,\n    getFstch,\n    getChild,\n    getChildren,\n    getLstch,\n    getParent,\n    getAllAnces,\n    getAllAncesIncludingSelf,\n    getAnces,\n    getAncesIncludingSelf,\n    getFstAncesHavingRsibIncludingSelf,\n    calcDepth,\n    getDepth,\n    getSibseq,\n    getBreadth,\n    getRsibOfFstAncesHavingRsibIncludingSelf,\n    getRdmost,\n    sdfsNext,\n    sdfsPrev,\n    isAncesOf,\n    isDesOf,\n    isAncesOfIncludingSelf,\n    isDesOfIncludingSelf,\n    getAllDesesIncludingSelf,\n    getAllDeses,\n    getFlatWidth,\n    getFlatOffset,\n    addLsib,\n    addRsib,\n    addFstch,\n    addLstch,\n    getDesFstiAndLsti,\n    rmFstch,\n    rmFstsib,\n    rmRsib,\n    rmLstsib,\n    rmLsib,\n    rmSelf,\n    rmChild\n}\n\n","const ndfunc = require(\"./ndfunc.js\")\nconst ding = require(\"./plugin/ding.js\")\nconst conns = require(\"./plugin/conns.js\")\nconst cmmn = require(\"./cmmn-utils.js\")\n\n\nmodule.exports = {\n    ndfunc : ndfunc,\n    ding : ding,\n    conns : conns,\n    cmmn : cmmn\n}\n","const ndfunc = require(\"../ndfunc\")\nconst cmmn = require(\"../cmmn-utils\")\nconst IDPOOL = ndfunc.newIdPool()\n\nconst TYPES = [\n    'root',\n    'index',\n    'plus',\n]\n\nfunction newRoot() {\n    /*\n        不显示\n        永远展开\n    */\n    let r = ndfunc.newRoot(IDPOOL)\n    r.text = 'root'\n    r.expanded = true\n    r.display = false\n    r.type = 'root'\n    return(r)\n}\n\nfunction newNode(text) {\n    let r = ndfunc.newLeafLonelySib(IDPOOL)\n    r.text = text\n    r.expanded = true\n    r.display = true\n    r.type = 'index'\n    return(r)\n}\n\nfunction newPlusNode() {\n    let r = ndfunc.newLeafLstsib(IDPOOL)\n    r.text = '+'\n    r.display = true\n    r.type = 'plus'\n    return(r)\n}\n\nfunction initSdfsel() {\n    let rnd = newRoot()\n    let plusnd = newPlusNode()\n    let sdfsel = [rnd]\n    sdfsel = ndfunc.addFstch(rnd,sdfsel,plusnd)\n    return([sdfsel,plusnd])\n}\n\nfunction getPairPlusnd(nd,sdfsel) {\n    return(ndfunc.getRsib(nd,sdfsel))\n}\n\nfunction getPairIndexNd(plusnd,sdfsel) {\n    return(ndfunc.getLsib(plusnd,sdfsel))\n}\n\n\nfunction plusndAddRsib(plusnd,sdfsel,text) {\n    let cond = ndfunc.isFstch(plusnd)\n    let nd = newNode(text)\n    sdfsel = ndfunc.addRsib(plusnd,sdfsel,nd)\n    pairPlusnd = newPlusNode()\n    ////\n    sdfsel = ndfunc.addRsib(nd,sdfsel,pairPlusnd)\n    childPlusnd = newPlusNode()\n    sdfsel = ndfunc.addFstch(nd,sdfsel,childPlusnd)\n    return([sdfsel,pairPlusnd,childPlusnd])\n}\n\n\nfunction indexndAddRsib(nd,sdfsel,text) {\n    let rslt = [sdfsel,null,null]\n    if(ndfunc.isRoot(nd)) {\n        console.log(\"can NOT add more-than-one root!\")\n    } else {\n        let plusnd = getPairPlusnd(nd,sdfsel)\n        rslt = plusndAddRsib(plusnd,sdfsel,text)\n    }\n    return(rslt)\n}\n\nfunction indexndAddFstch(nd,sdfsel,text) {\n    let plusnd = ndfunc.getFstch(nd,sdfsel)\n    rslt = plusndAddRsib(plusnd,sdfsel,text)\n    return(rslt)\n}\n\nfunction ndAddRsib(nd,sdfsel,text) {\n    if(nd.type === 'plus') {\n        return(plusndAddRsib(nd,sdfsel,text))\n    } else {\n        return(indexndAddRsib(nd,sdfsel,text))\n    }\n}\n\nfunction ndAddFstch(nd,sdfsel,text) {\n    if(nd.type === 'plus') {\n        console.log(\"can NOT add child to plusnd!\")\n        return([sdfsel,null,null])\n    } else {\n        return(indexndAddFstch(nd,sdfsel,text))\n    }\n}\n\n\nfunction getAllPlusnd(sdfsel) {\n    return(sdfsel.filter(r=>(r.type===\"plus\")))\n}\n\nfunction getAllIndexNd(sdfsel) {\n    return(sdfsel.filter(r=>(r.type===\"index\")))\n}\n\nfunction textGetNd(text,sdfsel) {\n    return(cmmn.afindv('text',text,sdfsel))\n}\n\nfunction textGetSdfsi(text,sdfsel) {\n    return(cmmn.afindi('text',text,sdfsel))\n}\n\nfunction textAddRsib(txt,sdfsel,text) {\n    let nd = textGetNd(txt,sdfsel)\n    return(ndAddRsib(nd,sdfsel,text))\n}\n\nfunction textAddFstch(txt,sdfsel,text) {\n    let nd = textGetNd(txt,sdfsel)\n    return(ndAddFstch(nd,sdfsel,text))\n}\n\n\nfunction ndRmSelf(nd,sdfsel) {\n    let pairPlusnd = getPairPlusnd(nd,sdfsel)\n    let rslt = ndfunc.rmSelf(nd,sdfsel);\n    sdfsel = rslt[0]\n    rslt = ndfunc.rmSelf(pairPlusnd,sdfsel);\n    sdfsel = rslt[0]\n    return(sdfsel)\n}\n\nfunction txtRmself(txt,sdfsel) {\n    let nd = textGetNd(txt,sdfsel)\n    return(ndRmSelf(nd,sdfsel))\n}\n\n\nfunction enableEdit(sdfsel) {\n    sdfsel.forEach(\n        r=>{\n            if(r.type==='plus') {\n                r.display = true \n            }\n        }\n    )\n    return(sdfsel)\n}\n\nfunction disableEdit(sdfsel) {\n    sdfsel.forEach(\n        r=>{\n            if(r.type==='plus') {\n                r.display = false \n            }\n        }\n    )\n    return(sdfsel)\n}\n\n\nfunction ndUnexpandAll(nd,sdfsel,mode) {\n    /*\n        收起会收起所有子孙\n    */\n    nd.expanded = false\n    nd.display = true\n    let deses = ndfunc.getAllDeses(nd,sdfsel)\n    deses = deses.map(\n        r=>{\n            r.expanded = false\n            r.display = false\n            return(r)\n        }\n    )\n    return(sdfsel)\n}\n\nfunction txtUnexpandAll(txt,sdfsel,mode) {\n    let nd = textGetNd(txt,sdfsel)\n    return(ndUnexpandAll(nd,sdfsel,mode))\n}\n\nfunction ndExpandAll(nd,sdfsel,mode) {\n    /*\n        \n    */\n    nd.expanded = true\n    nd.display = true\n    let deses = ndfunc.getAllDeses(nd,sdfsel)\n    deses = deses.map(\n        r=>{\n            if(mode === \"edit\" && r.type === 'index') {\n                r.expanded = true\n                r.display = true \n            } else if(mode === \"edit\" && r.type === 'plus') {\n                r.display = true\n            } else if(mode === \"disp\" && r.type === 'index') {\n                r.expanded = true\n                r.display = true\n            } else {\n                r.display = false\n            }\n            return(r)\n        }\n    )\n    return(sdfsel)\n}\n\nfunction txtExpandAll(txt,sdfsel,mode) {\n    let nd = textGetNd(txt,sdfsel)\n    return(ndExpandAll(nd,sdfsel,mode))\n}\n\nfunction ndExpand(nd,sdfsel,mode) {\n    /*\n        展开只会展开children\n    */\n    nd.expanded = true\n    nd.display = true\n    let children = ndfunc.getChildren(nd,sdfsel)\n    children.forEach(\n        r=>{\n            if(mode === \"edit\" && r.type === 'index') {\n                r.expanded = true\n                r.display = true \n            } else if(mode === \"edit\" && r.type === 'plus') {\n                r.display = true\n            } else if(mode === \"disp\" && r.type === 'index') {\n                r.expanded = true\n                r.display = true\n            } else {\n                r.display = false\n            }\n        }\n    )\n    return(sdfsel)\n}\n\nfunction txtExpand(txt,sdfsel,mode) {\n    let nd = textGetNd(txt,sdfsel)\n    return(ndExpand(nd,sdfsel,mode))\n}\n\nfunction rootUnexpandAll(sdfsel,mode) {\n    let children = ndfunc.getChildren(sdfsel[0],sdfsel)\n    children.forEach(\n        r=> {\n            ndUnexpandAll(r,sdfsel,mode)\n        }\n    )\n    if(mode === \"disp\"){\n        disableEdit(children)\n    } else {\n        enableEdit(children)\n    }\n    return(sdfsel)\n}\n\nfunction rootExpandAll(sdfsel,mode) {\n    let children = ndfunc.getChildren(sdfsel[0],sdfsel)\n    children.forEach(\n        r=> {\n            ndExpandAll(r,sdfsel,mode)\n        }\n    )\n    if(mode === \"disp\"){\n        disableEdit(children)\n    } else {\n        enableEdit(children)\n    }\n    return(sdfsel)\n}\n\n\nfunction disp(sdfsel) {\n    sdfsel.forEach(\n        r => {\n            r.display ? console.log(\"    \".repeat(r._depth - 1)+r.text) : false\n        }\n    )\n}\n\n\n\nmodule.exports = {\n    IDPOOL,\n    newRoot,\n    newNode,\n    newPlusNode,\n    initSdfsel,\n    getPairPlusnd,\n    getPairIndexNd,\n    plusndAddRsib,\n    indexndAddRsib,\n    indexndAddFstch,\n    ndAddRsib,\n    ndAddFstch,\n    getAllPlusnd,\n    getAllIndexNd,\n    textGetNd,\n    textGetSdfsi,\n    textAddRsib,\n    textAddFstch,\n    ndRmSelf,\n    txtRmself,\n    enableEdit,\n    disableEdit,\n    ndUnexpandAll,\n    txtUnexpandAll,\n    ndExpandAll,\n    txtExpandAll,\n    ndExpand,\n    txtExpand,\n    rootUnexpandAll,\n    rootExpandAll,\n    disp,\n}\n\n","const ndfunc = require(\"../ndfunc\")\nconst cmmn = require(\"../cmmn-utils\")\nlet CONND = {\n    't':'├── ',\n    'v':'│   ',\n    'l':'└── ',\n    'ws':'    '\n}\n\nlet CONN_WIDTH = 8;\n\nfunction _dispOne(nd) {\n    let arr = nd.conns.map((r)=>CONND[r])\n    let s = arr.join('')\n    s = s + nd.tag\n    return(s)\n}\n\nfunction disp(sdfsel) {\n    sdfsel.forEach(\n        r => {\n            r.display ? console.log(_dispOne(r)) : false\n        }\n    )\n}\n\n\nfunction newRoot(idpool) {\n    /*\n        不显示\n        永远展开\n    */\n    let r = ndfunc.newRoot(idpool)\n    r.tag = 'root'\n    r.expanded = true\n    r.display = false\n    r.checked = false\n    r.leaf = true\n    r._conns = []\n    r.conns = []\n    r.connWidth = CONN_WIDTH\n    return(r)\n}\n\nfunction newNode(tag,idpool) {\n    let r = ndfunc.newLeafLonelySib(idpool)\n    r.tag = tag\n    r.expanded = true\n    r.display = true\n    r.checked = false\n    r.leaf = true\n    r._conns = []\n    r.conns = []\n    r.connWidth = CONN_WIDTH\n    return(r)\n}\n\nfunction initSdfsel(idpool) {\n    idpool = (idpool === undefined) ? ndfunc.newIdPool():idpool\n    let rnd = newRoot(idpool)\n    let sdfsel = [rnd]\n    return([sdfsel,idpool])\n}\n\n\nfunction _calcConnMapFunc(r) {\n    let rslt;\n    if(r==='t') {\n        rslt = 'v'\n    } else if(r === 'v') {\n        rslt = 'v'\n    } else {\n        rslt = 'ws'\n    }\n    return(rslt)\n}\n\n\nfunction calcAndSetConnsWhenAddFstch(nd,sdfsel) {\n    //nd is fstch\n    let _conns;\n    let cond;\n    if(ndfunc.isRoot(nd)) {\n        _conns = []\n    } else {\n        let pnd = ndfunc.getParent(nd,sdfsel)\n        let _pconns = pnd._conns.slice(0,pnd._conns.length)\n        _conns = _pconns.map(_calcConnMapFunc)\n        cond = ndfunc.isLstch(nd)\n        if(cond) {\n            _conns.push('l')\n        } else {\n            _conns.push('t')\n        }\n    }\n    ////\n    nd._conns = _conns\n    if(sdfsel[0].display === false){\n        nd.conns = _conns.slice(1)\n    } else {\n        nd.conns = _conns\n    }\n    return(nd)\n}\n\n\nfunction calcAndSetConnsWhenAddLstch(nd,sdfsel) {\n    //nd is lstch\n    let lsib = ndfunc.getLsib(nd,sdfsel)\n    lsib._conns = cmmn.setlst('t',lsib._conns)\n    lsib.conns = lsib._conns.slice(1)\n    nd = calcAndSetConnsWhenAddFstch(nd,sdfsel)\n    return(nd)\n}\n\nfunction calcAndSetConnsWhenAddLsib(nd,sdfsel) {\n    //nd is lsib\n    nd = calcAndSetConnsWhenAddFstch(nd,sdfsel)\n    return(nd)\n}\n\nfunction calcAndSetConnsWhenAddRsib(nd,sdfsel) {\n    //nd is rsib\n    if(ndfunc.isFstsib(nd)){\n        nd = calcAndSetConnsWhenAddFstch(nd,sdfsel)\n    } else {\n        nd = calcAndSetConnsWhenAddLstch(nd,sdfsel)\n    }\n    return(nd)\n}\n\n\n\n\nfunction ndAndTagAddLsib(nd,sdfsel,tag,idpool) {\n    let nnd = newNode(tag,idpool)\n    sdfsel = ndfunc.addLsib(nd,sdfsel,nnd)\n    calcAndSetConnsWhenAddLsib(nnd,sdfsel)\n    return(sdfsel)\n}\n\n\nfunction ndAndTagAddRsib(nd,sdfsel,tag,idpool) {\n    let nnd = newNode(tag,idpool)\n    sdfsel = ndfunc.addRsib(nd,sdfsel,nnd)\n    calcAndSetConnsWhenAddRsib(nnd,sdfsel)\n    return(sdfsel)\n}\n\nfunction ndAndTagAddLstch(nd,sdfsel,tag,idpool) {\n    let nnd = newNode(tag,idpool)\n    if(ndfunc.isLeaf(nd)|| ndfunc.isRoot(nd)) {\n        sdfsel = ndfunc.addFstch(nd,sdfsel,nnd)\n        calcAndSetConnsWhenAddFstch(nnd,sdfsel)\n    } else {\n        sdfsel = ndfunc.addLstch(nd,sdfsel,nnd)\n        calcAndSetConnsWhenAddLstch(nnd,sdfsel)\n    }\n    nd.leaf = false\n    return(sdfsel)\n}\n\nfunction calcAndSetConnsWhenAddRmSelf(nd,sdfsel) {\n    //nd \n    if(ndfunc.isLstsibButNotFstsib(nd)){\n        let lsib = ndfunc.getLsib(nd,sdfsel)\n        lsib._conns = cmmn.setlst('l',lsib._conns)\n        lsib.conns = lsib._conns.slice(1)\n    } else {\n        \n    }\n    //if nd is tree using update\n    return(nd)\n}\n\n\n\n\nfunction ndRmSelf(nd,sdfsel) {\n    if(ndfunc.isFstchAndLstch(nd)){\n        let pnd = ndfunc.getParent(nd,sdfsel)\n        pnd.leaf = true\n    } else {\n\n    }\n    calcAndSetConnsWhenAddRmSelf(nd,sdfsel)\n    let tmp = ndfunc.rmSelf(nd,sdfsel)\n    return(tmp[0])\n}\n\n\n\nfunction ndUnexpandAll(nd,sdfsel) {\n    /*\n        收起会收起所有子孙\n    */\n    nd.expanded = false\n    let deses = ndfunc.getAllDeses(nd,sdfsel)\n    deses = deses.map(\n        r=>{\n            r.display = false\n            return(r)\n        }\n    )\n    return(sdfsel)\n}\n\nfunction ndExpand(nd,sdfsel) {\n    /*\n        展开只会展开children\n    */\n    nd.expanded = true\n    let children = ndfunc.getChildren(nd,sdfsel)\n    children.forEach(\n        r=>{\n            r.display = true\n            if(r.expanded) {\n                //根据expanded 决定是否显示子层,递归\n                sdfsel = ndExpand(r,sdfsel)\n            } else {\n\n            }\n        }\n    )\n    return(sdfsel)\n}\n\n\n//addRsibTree\n//addLsibTree\n//addLstchTree\n//\n\nfunction _updateConnsAfterAdd(sdfsel) {\n    let _gpconns = sdfsel[0]._conns.slice(0,sdfsel[0]._conns.length-1)\n    let tail = sdfsel.slice(1).map(\n        (r,i,arr)=> {\n            r._conns = _gpconns.concat(r._conns)\n            if(arr[0].display === false){\n                r.conns = r._conns.slice(1)\n            } else {\n                r.conns = r._conns\n            }\n            return(r)\n        }\n    )\n    sdfsel = tail.unshift(sdfsel[0])\n    return(sdfsel)\n}\n\n\nfunction _updateConnsAfterRmSelf(depth,sdfsel) {\n    sdfsel = sdfsel.map(\n        (r,i,arr)=> {\n            r._conns = cmmn.getLstSlice(depth,r._conns)\n            if(arr[0].display === false){\n                r.conns = r._conns.slice(1)\n            } else {\n                r.conns = r._conns\n            }\n            return(r)\n        }\n    )\n    return(sdfsel)\n}\n\n\n\n\nmodule.exports = {\n    CONN_WIDTH,\n    disp,\n    newRoot,\n    initSdfsel,\n    ndAndTagAddLsib,\n    ndAndTagAddRsib,\n    ndAndTagAddLstch,\n    ndRmSelf,\n    ndUnexpandAll,\n    ndExpand,\n    newIdPool:ndfunc.newIdPool,\n    sdfselGetMaxId:ndfunc.sdfselGetMaxId,\n}\n\n\n"],"sourceRoot":""}