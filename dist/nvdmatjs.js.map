{"version":3,"sources":["webpack://NVDMATJS/webpack/universalModuleDefinition","webpack://NVDMATJS/webpack/bootstrap","webpack://NVDMATJS/./cmmn-utils.js","webpack://NVDMATJS/./nvdmatjs.js","webpack://NVDMATJS/./ndfunc.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getlsti","length","getlstv","simpleCompare","a","b","isArray","arr","Array","isDate","toString","isRegExp","isWindow","obj","window","isScope","$evalAsync","$watch","isFunction","isDefined","createMap","deepcopyJSON","JSON","parse","stringify","afindi","v","findIndex","ele","afindv","find","getlsta","secdel","fsti","lsti","splice","insert","insertl","subl","norecurEq","l0","l1","k","equals","o1","o2","keySet","t1","getTime","charAt","ndfunc","cmmn","isRoot","nd","_pid","isFstsib","_lsibid","isLstsib","_rsibid","isLeaf","_fstchid","isNonLeaf","undefined","havingRsib","idgetnd","id","sdfsel","newNode","idpool","currid","leafize","getLsib","getRsib","getPrecedingSibs","preceding","push","reverse","getFollowingSibs","following","getFstsib","getLstsib","lstsib","getAllSibs","concat","getFstch","getChild","which","child","rsib","getChildren","children","fstch","getLstch","lstch","getParent","getAllAnces","ances","getAllAncesIncludingSelf","getAnces","getFstAncesHavingRsibIncludingSelf","cond","calcDepth","depth","getRsibOfFstAncesHavingRsibIncludingSelf","getRdmost","prev","rdmost","sdfsNext","next","isAncesOf","nd0","nd1","_id","isAncesOfIncludingSelf","getAllDesesIncludingSelf","deses","_updateDepth","ndepth","incr","_depth","map","_nonfstsibize","_fstsibize","_arg2SubAndNrnd","arg","subsdfsel","nrnd","_rootize","_deUpdateDepth","decr","getDesFstiAndLsti","rmFstch","slice","sndch","rmFstsib","rmRsib","rrsib","rmSelf","rslt","isFstch","isFstchButNotLstch","isFstsibButNotLstsib","isLstch","isLstchButNotFstch","isLstsibButNotFstsib","isFstchAndLstch","isFstsibAndLstsib","isMidch","isMidsib","isUndefined","havingLsib","eq","newIdPool","newRoot","newFstsib","newMidsib","newLstsib","newLeafFstsib","newLeafMidsib","newLeafLstsib","getSib","getAncesIncludingSelf","getDepth","getSibseq","getBreadth","childrens","nds","sdfsPrev","lsib","isDesOf","isDesOfIncludingSelf","getAllDeses","shift","getFlatWidth","filter","getFlatOffset","index","pre","addLsib","console","log","_fstsibPrependLsib","_insertLsib","addRsib","_lstsibAppendRsib","_insertRsib","addFstch","rmLstsib","sndlstsib","rmLsib","llsib","rmChild"],"mappings":"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","file":"nvdmatjs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NVDMATJS\"] = factory();\n\telse\n\t\troot[\"NVDMATJS\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\nfunction deepcopyJSON(o) {\n    return(JSON.parse(JSON.stringify(o)))\n}\n\n/*\n    a    attr\n    i    index\n    v    value\n*/\n\nfunction afindi(a,v,l) {\n    let i = l.findIndex(ele=>(ele[a]===v))\n    return(i)\n}\n\nfunction afindv(a,v,l) {\n    let r = l.find(ele=>(ele[a]===v))\n    return(r)\n}\n\n\nfunction getlsti(l) {\n    return(l.length -1)\n}\n\nfunction getlstv(l) {\n    return(l[getlsti(l)])\n}\n\nfunction getlsta(a,l) {\n    return(getlstv(l)[a])\n}\n\nfunction secdel(fsti,lsti,l) {\n    let c = lsti - fsti + 1 \n    l.splice(fsti,c)\n    return(l)\n}\n\nfunction insert(i,v,l) {\n    l.splice(i,0,v)\n    return(l)\n}\n\nfunction insertl(i,subl,l) {\n     l.splice(i,0,...subl)\n     return(l)\n}\n\n\nfunction norecurEq(l0,l1) {\n    let rslt = true\n    for(let i=0;i<l0.length;i++) {\n        let cond = (l0[k] === l1[k])\n        if(cond === false) {\n            return(false)\n        }\n    }\n    return(rslt)\n}\n\nfunction simpleCompare(a, b) {\n    return a === b || a !== a && b !== b;\n}\n\nfunction isArray(arr) {\n    return Array.isArray(arr) || arr instanceof Array;\n}\n\nfunction isDate(value) {\n    return toString.call(value) === '[object Date]';\n}\n\nfunction isRegExp(value) {\n    return toString.call(value) === '[object RegExp]';\n}\n\n\nfunction isWindow(obj) {\n    return obj && obj.window === obj;\n}\nfunction isScope(obj) {\n    return obj && obj.$evalAsync && obj.$watch;\n}\n\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\n\nfunction isDefined(value) {\n    return typeof value !== 'undefined';\n}\n\n\nfunction createMap() {\n    return Object.create(null);\n}\n\n\nfunction equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true;\n    var t1 = typeof o1, t2 = typeof o2, length, key, keySet;\n    if (t1 === t2 && t1 === 'object') {\n        if (isArray(o1)) {\n            if (!isArray(o2))\n                return false;\n            if ((length = o1.length) === o2.length) {\n                for (key = 0; key < length; key++) {\n                    if (!equals(o1[key], o2[key]))\n                        return false;\n                }\n                return true;\n            }\n        } else if (isDate(o1)) {\n            if (!isDate(o2))\n                return false;\n            return simpleCompare(o1.getTime(), o2.getTime());\n        } else if (isRegExp(o1)) {\n            if (!isRegExp(o2))\n                return false;\n            return o1.toString() === o2.toString();\n        } else {\n            if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) || isArray(o2) || isDate(o2) || isRegExp(o2))\n                return false;\n            keySet = createMap();\n            for (key in o1) {\n                if (key.charAt(0) === '$' || isFunction(o1[key]))\n                    continue;\n                if (!equals(o1[key], o2[key]))\n                    return false;\n                keySet[key] = true;\n            }\n            for (key in o2) {\n                if (!(key in keySet) && key.charAt(0) !== '$' && isDefined(o2[key]) && !isFunction(o2[key]))\n                    return false;\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\n\nmodule.exports = {\n    deepcopyJSON,\n    afindi,\n    afindv,\n    getlsti,\n    getlstv,\n    getlsta,\n    secdel,\n    insert,\n    insertl,\n    norecurEq,\n    simpleCompare,\n    isArray,\n    isDate,\n    isRegExp,\n    isWindow,\n    isScope,\n    isFunction,\n    isDefined,\n    createMap,\n    equals\n}\n\n\n","const ndfunc = require(\"./ndfunc.js\")\nconst cmmn = require(\"./cmmn-utils.js\")\n\n\nmodule.exports = {\n    ndfunc : ndfunc,\n}\n","const cmmn = require(\"./cmmn-utils.js\")\n\n\n/*\n    _fstchid                              fst-child-id\n    _lsibid                               lsib-id\n    _rsibid                               rsib-id\n    _id                                   unique-number-id-based-on-add\n    _pid                                  parent-id\n    rid                                   root-id\n    getLsib                               get-left-sibling\n    getRsib                               get-right-sibling\n    getPrecedingSibs                      get-preceding-siblings\n    getFollowingSibs                      get-following-siblings\n    fstsib                                fst-sibling\n    midsib                                middle-sibling\n    lstsib                                lst-sibling\n    sib                                   sibling\n    sibs                                  siblings\n    getFstsib                             get-first-sibling-including-self\n    getLstsib                             get-last-sibling-including-self\n    getSib                                get-sibling-including-self\n    getAllSibs                            get-all-siblings-including-self\n    fstch                                 first-child\n    lstch                                 last-child\n    child                                 child\n    getFstch                              get-first-child\n    getLstch                              get-last-child\n    getChild                              get-child\n    getChildren                           get-children\n    p                                     parent\n    ances                                 ancestor\n    ancestors                             ancestors\n    getParent                             get-parent\n    getAllAnces                           get-all-ancestors\n    getAllAncesIncludingSelf              get-all-ancestors-including-self\n    getAnces                              get-ancestor\n    getAncesIncludingSelf                 get-ancestor-including-self\n    getFstAncesHavingRsibIncludingSelf    get-first-ancestor-having-rsib-including-self\n    getRdmost                             get-rdmost\n    getAllDeses                           get-all-descendants\n    getAllDesesIncludingSelf              get-all-descendants-including-self\n*/\n\n////\nfunction isRoot(nd) {\n    return(nd._pid === null)\n}\n\nfunction isFstch(nd) {\n    return(\n        nd._lsibid === null &&\n        nd._pid !== null\n    )\n}\n\nfunction isFstsib(nd) {\n    return(\n        nd._lsibid === null\n    )\n}\n\n\nfunction isFstchButNotLstch(nd) {\n    return(\n        nd._rsibid !== null && \n        nd._rsibid !== undefined && \n        nd._lsibid === null &&\n        nd._pid !== null\n    )\n}\n\n\n\nfunction isFstsibButNotLstsib(nd) {\n    return(\n        nd._rsibid !== null &&\n        nd._rsibid !== undefined &&\n        nd._lsibid === null\n    )\n}\n\n\nfunction isLstch(nd) {\n    return(\n        nd._rsibid === null &&\n        nd._pid !== null\n    )\n}\n\nfunction isLstsib(nd) {\n    return(\n        nd._rsibid === null \n    )\n}\n\n\nfunction isLstchButNotFstch(nd) {\n    return(\n        nd._rsibid === null && \n        nd._lsibid !== null &&\n        nd._lsibid !== undefined &&\n        nd._pid !== null\n    )\n}\n\n\nfunction isLstsibButNotFstsib(nd) {\n    return(\n        nd._rsibid === null &&\n        nd._lsibid !== null &&\n        nd._lsibid !== undefined\n    )\n}\n\n\nfunction isFstchAndLstch(nd) {\n    return( \n        nd._lsibid === null && \n        nd._rsibid === null &&\n        nd._pid !== null\n    )\n}\n\nfunction isFstsibAndLstsib(nd) {\n    return( \n        nd._lsibid === null && \n        nd._rsibid === null\n    )\n}\n\n\nfunction isMidch(nd) {\n    return( \n        nd._lsibid !== null && \n        nd._lsibid !== undefined &&\n        nd._rsibid !== null &&\n        nd._rsibid !== undefined &&\n        nd._pid !== null\n    )\n}\n\n\nfunction isMidsib(nd) {\n    return(\n        nd._lsibid !== null &&\n        nd._lsibid !== undefined &&\n        nd._rsibid !== null &&\n        nd._rsibid !== undefined \n    )\n}\n\n\nfunction isLeaf(nd) {\n    return(nd._fstchid === null)\n}\n\nfunction isNonLeaf(nd) {\n    return(\n        nd._fstchid !== null &&\n        nd._fstchid !== undefined\n    )\n}\n\nfunction isUndefined(nd) {\n    return(nd._fstchid === undefined)\n}\n\n////\nfunction havingLsib(nd) {\n    return(\n        nd._lsibid !== null && \n        nd._lsibid !== undefined\n    )\n}\n\nfunction havingRsib(nd) {\n    return(\n        nd._rsibid !== null && \n        nd._rsibid !== undefined\n    )\n}\n\n////\n\nfunction idgetnd(id,sdfsel) {\n    /*\n        id could be a number or null\n    */\n    let nd = (id === null) ? null : cmmn.afindv('_id',id,sdfsel)\n    return(nd)\n}\n\nfunction eq(nd0,nd1) {\n    let rslt = true\n    for(let k in nd0) {\n        let cond = (nd0[k] === nd1[k])\n        if(cond === false) {\n            return(false)\n        }\n    }\n    return(rslt)\n}\n\n////new\n\n\nfunction newIdPool() {\n    let d = {\n        currid:0\n    }\n    return(d)\n}\n\nfunction newNode(idpool) {\n    /*\n        var idpool = newIdPool()\n        var nd = newNode(idpool)\n    */\n    let d = {\n        \"_fstchid\":undefined,\n        \"_lsibid\":undefined,\n        \"_rsibid\":undefined,\n        \"_id\":idpool.currid,\n        \"_pid\":undefined,\n        \"_depth\":undefined,\n    }\n    idpool.currid = idpool.currid + 1\n    return(d)\n}\n\nfunction newRoot(idpool) {\n    let d = newNode(idpool)\n    d._lsibid = null\n    d._rsibid = null\n    d._pid = null\n    d._depth = 0\n    return(d)\n}\n\n\nfunction newFstsib(idpool) {\n    let d = newNode(idpool)\n    d._lsibid = null\n    return(d)\n}\n\nfunction newMidsib(idpool) {\n    let d = newNode(idpool)\n    return(d)\n}\n\nfunction newLstsib(idpool) {\n    let d = newNode(idpool)\n    d._rsibid = null\n    return(d)\n}\n\nfunction leafize(nd) {\n    nd._fstchid = null\n    return(nd)\n}\n\nfunction newLeafFstsib(idpool) {\n    let d = newNode(idpool)\n    d._lsibid = null\n    d._fstchid = null\n    return(d)\n}\n\nfunction newLeafMidsib(idpool) {\n    let d = newNode(idpool)\n    d._fstchid = null\n    return(d)\n}\n\nfunction newLeafLstsib(idpool) {\n    let d = newNode(idpool)\n    d._rsibid = null\n    d._fstchid = null\n    return(d)\n}\n\n////sib\n\nfunction getLsib(nd,sdfsel) {\n    let lsib = idgetnd(nd._lsibid,sdfsel)\n    return(lsib)\n}\n\nfunction getRsib(nd,sdfsel) {\n    let rsib = idgetnd(nd._rsibid,sdfsel)\n    return(rsib)\n}\n\nfunction getPrecedingSibs(nd,sdfsel) {\n    let preceding = []\n    while(nd !== null) {\n        nd = getLsib(nd,sdfsel)\n        if(nd === null) {\n            break\n        } else {\n            preceding.push(nd)\n        }\n    }\n    preceding.reverse()\n    return(preceding)\n}\n\nfunction getFollowingSibs(nd,sdfsel) {\n    let following = []\n    while(nd !== null) {\n        nd = getRsib(nd,sdfsel)\n        if(nd === null) {\n            break\n        } else {\n            following.push(nd)\n        }\n    }\n    return(following)\n}\n\nfunction getFstsib(nd,sdfsel) {\n    /*\n        including-self\n    */\n    let preceding = getPrecedingSibs(nd,sdfsel)\n    let fstsib = (preceding.length === 0) ? nd : preceding[0]\n    return(fstsib)\n}\n\nfunction getLstsib(nd,sdfsel) {\n    let following = getFollowingSibs(nd,sdfsel)\n    let lstsib = (following.length === 0) ? nd : cmmn.getlstv(following)\n    lstsib = (lstsib === undefined)? null:lstsib\n    return(lstsib)\n}\n\nfunction getAllSibs(nd,sdfsel) {\n    /*\n        including-self\n    */\n    let preceding = getPrecedingSibs(nd,sdfsel)\n    let following = getFollowingSibs(nd,sdfsel)\n    let sibs = Array.prototype.concat(preceding,[nd],following)\n    return(sibs)\n}\n\nfunction getSib(which,nd,sdfsel) {\n    /*\n        including-self\n    */\n    let sibs = getAllSibs(nd,sdfsel)\n    return(sibs[which])\n}\n\n\n////child,children\n\nfunction getFstch(nd,sdfsel) {\n    /*\n        get-first-child\n    */\n    let fstch = idgetnd(nd._fstchid,sdfsel)\n    return(fstch)\n}\n\nfunction getChild(which,nd,sdfsel) {\n    /*\n        get-child-by-index\n    */\n    if(isLeaf(nd)){\n        return(null)\n    } else {\n        let c = 0\n        let child = getFstch(nd,sdfsel)\n        let rsib = getRsib(child,sdfsel)\n        while(c<which) {\n            if(rsib !== null) {\n                child = rsib\n                rsib = getRsib(child,sdfsel)\n            } else {\n                break\n            }\n            c = c + 1\n        }\n        child = (c < which) ? null : child\n        return(child)\n    }\n}\n\nfunction getChildren(nd,sdfsel) {\n    /*\n        get-children\n    */\n    let children = []\n    if(isLeaf(nd)){\n        \n    } else {\n        let fstch = getFstch(nd,sdfsel)\n        children.push(fstch)\n        children = children.concat(getFollowingSibs(fstch,sdfsel))\n    }\n    return(children)\n}\n\nfunction getLstch(nd,sdfsel) {\n    /*\n        get-last-child\n    */\n    let children = getChildren(nd,sdfsel)\n    let lstch = cmmn.getlstv(children)\n    lstch = (lstch === undefined)? null:lstch\n    return(lstch)\n}\n\n////parent,ances,ances-including-self\n\nfunction getParent(nd,sdfsel) {\n    let fstsib = getFstsib(nd,sdfsel)\n    let p = idgetnd(fstsib._pid,sdfsel)\n    return(p)\n}\n\nfunction getAllAnces(nd,sdfsel) {\n    let ances = []\n    let p = getParent(nd,sdfsel)\n    while(p !== null){\n        ances.push(p)\n        p = getParent(p,sdfsel)\n    }\n    return(ances)\n}\n\n\nfunction getAllAncesIncludingSelf(nd,sdfsel) {\n    let ances = getAllAnces(nd,sdfsel)\n    return(Array.prototype.concat([nd],ances))\n}\n\nfunction getAnces(which,nd,sdfsel){\n    let p = getParent(nd,sdfsel)\n    let c = 0\n    while(p !== null){\n        if(c<which) {\n            p = getParent(p,sdfsel)\n            c = c + 1\n        } else {\n            break\n        }\n    }\n    return(p)\n}\n\nfunction getAncesIncludingSelf(which,nd,sdfsel){\n    if(which === 0) {\n        return(nd)\n    } else {\n        return(getAnces(which-1,nd,sdfsel))\n    }\n}\n\nfunction getFstAncesHavingRsibIncludingSelf(nd,sdfsel) {\n    let cond = havingRsib(nd)\n    while(!cond) {\n        nd = getParent(nd,sdfsel)\n        if(nd === null) {\n            break\n        } else {\n            cond = havingRsib(nd)\n        }\n    }\n    return(nd)\n}\n\n\n////\n\nfunction calcDepth(nd,sdfsel) {\n    let depth = 0\n    let p = getParent(nd,sdfsel)\n    while(p !== null){\n        p = getParent(p,sdfsel)\n        depth = depth + 1\n    }\n    return(depth)\n}\n\nfunction getDepth(nd,sdfsel) {\n    let depth = (nd._depth === undefined) ? calcDepth(nd,sdfsel) : nd._depth\n    return(depth)\n}\n\nfunction getSibseq(nd,sdfsel) {\n    let preceding = getPrecedingSibs(nd,sdfsel)\n    return(preceding.length)\n}\n\nfunction getBreadth(nd,sdfsel) {\n    let p = getParent(nd,sdfsel)\n    let ppreceding = getPrecedingSibs(p,sdfsel)\n    let childrens = ppreceding.map((nd)=>(getChildren(nd,sdfsel)))\n    let nds = Array.prototype.concat(...childrens)\n    let preceding = getPrecedingSibs(nd,sdfsel)\n    return(nds.length+preceding.length)\n}\n\n\n////\n\nfunction getRsibOfFstAncesHavingRsibIncludingSelf(nd,sdfsel) {\n    let ances = getFstAncesHavingRsibIncludingSelf(nd,sdfsel)\n    if(ances === null) {\n        return(null)\n    } else {\n        let rsib = getRsib(ances,sdfsel)\n        return(rsib)\n    }\n}\n\n\nfunction getRdmost(nd,sdfsel) {\n    let prev = nd\n    let rdmost = getLstch(prev,sdfsel)\n    while(rdmost !== null) {\n        prev = rdmost\n        rdmost = getLstch(prev,sdfsel)\n    }\n    return(prev)\n}\n\nfunction sdfsNext(nd,sdfsel) {\n    let next;\n    let fstch = getFstch(nd,sdfsel)\n    if(fstch === null) {\n        next = getRsibOfFstAncesHavingRsibIncludingSelf(nd,sdfsel)\n    } else {\n        next = fstch\n    }\n    return(next)\n}\n\nfunction sdfsPrev(nd,sdfsel) {\n    let prev;\n    let lsib = getLsib(nd,sdfsel)\n    if(lsib === null) {\n        prev = getParent(nd,sdfsel)\n    } else {\n        prev = getRdmost(lsib,sdfsel)\n    }\n    return(prev)\n}\n\n////\nfunction isAncesOf(nd0,nd1,sdfsel) {\n    let ances = getAllAnces(nd1,sdfsel)\n    let index = cmmn.afindi('_id',nd0._id,ances)\n    return(index>=0)\n}\n\nfunction isDesOf(nd0,nd1,sdfsel) {\n    return(isAncesOf(nd1,nd0,sdfsel))\n}\n\nfunction isAncesOfIncludingSelf(nd0,nd1,sdfsel) {\n    let ances = getAllAncesIncludingSelf(nd1,sdfsel)\n    let index = cmmn.afindi('_id',nd0._id,ances)\n    return(index>=0)\n}\n\nfunction isDesOfIncludingSelf(nd0,nd1,sdfsel) {\n    return(isAncesOfIncludingSelf(nd1,nd0,sdfsel))\n}\n\n////descendants\n\nfunction getAllDesesIncludingSelf(nd,sdfsel) {\n    let deses = []\n    let root = nd\n    while(nd!==null && isAncesOfIncludingSelf(root,nd,sdfsel)) {\n        deses.push(nd)\n        nd  = sdfsNext(nd,sdfsel)\n    }\n    return(deses)\n}\n\nfunction getAllDeses(nd,sdfsel) {\n    let deses = getAllDesesIncludingSelf(nd,sdfsel)\n    deses.shift()\n    return(deses)\n}\n\n\nfunction getFlatWidth(nd,sdfsel) {\n    let deses=getAllDesesIncludingSelf(nd,sdfsel)\n    return(deses.filter(isLeaf).length)\n}\n\nfunction getFlatOffset(nd,sdfsel) {\n    let index = sdfsel.findIndex(r=>(r._id === nd._id))\n    let pre = sdfsel.slice(0,index)\n    pre = pre.filter(isLeaf)\n    return(pre.length)\n}\n\n\n/*\n *\n */\n\n\nfunction _updateDepth(ndepth,sdfsel) {\n    let incr = ndepth - sdfsel[0]._depth\n    sdfsel = sdfsel.map(r=>{\n        r._depth = r._depth + incr\n        return(r)\n    })\n    return(sdfsel)\n}\n\n\nfunction _nonfstsibize(nd) {\n    nd._pid = null\n    return(nd)\n}\n\nfunction _fstsibize(nd) {\n    nd._lsibid = null\n    return(nd)\n}\n\nfunction _lstsibize(nd) {\n    nd._pid = null\n    nd._rsibid = null\n    return(nd)\n}\n\nfunction _arg2SubAndNrnd(arg) {\n    let subsdfsel;\n    let nrnd;\n    if(cmmn.isArray(arg)) {\n        subsdfsel = arg\n        nrnd = subsdfsel[0]\n    } else {\n        subsdfsel = [arg]\n        nrnd = arg\n    }\n    return([subsdfsel,nrnd])\n}\n\nfunction _insertLsib(nd,sdfsel,arg) {\n    let [subsdfsel,nrnd] = _arg2SubAndNrnd(arg);\n    let ndepth = nd._depth\n    subsdfsel = _updateDepth(ndepth,subsdfsel)\n    let lsib = getLsib(nd,sdfsel)\n    lsib._rsibid = nrnd._id\n    nrnd._lsibid = lsib._id\n    nd._lsibid = nrnd._id\n    nrnd._rsibid = nd._id\n    nrnd = _nonfstsibize(nrnd)\n    let index = cmmn.afindi('_id',nd._id,sdfsel)\n    sdfsel = cmmn.insertl(index,subsdfsel,sdfsel)\n    return(sdfsel)\n}\n\nfunction _fstsibPrependLsib(nd,sdfsel,arg) {\n    let [subsdfsel,nrnd] = _arg2SubAndNrnd(arg)\n    let ndepth = nd._depth\n    subsdfsel = _updateDepth(ndepth,subsdfsel)\n    let p = getParent(nd,sdfsel)\n    p._fstchid = nrnd._id\n    nrnd._pid = p._id\n    nd._pid = null\n    nrnd._lsibid = null\n    nrnd._rsibid = nd._id\n    nd._lsibid = nrnd._id\n    let index = cmmn.afindi('_id',nd._id,sdfsel)\n    sdfsel = cmmn.insertl(index,subsdfsel,sdfsel)\n    return(sdfsel)\n}\n\n\nfunction addLsib(nd,sdfsel,arg) {\n    /*\n        rnd  can NOT addLsib\n        fstch \n        nonfstch\n        return([nd,nnd])\n    */\n    if(isRoot(nd)) {\n        console.log(\"rnd  can NOT addLsib\")\n    } else {\n        if(isFstsib(nd))  {\n            sdfsel = _fstsibPrependLsib(nd,sdfsel,arg)\n        } else {\n            sdfsel = _insertLsib(nd,sdfsel,arg)\n        }\n    }\n    return(sdfsel)\n}\n\nfunction _lstsibAppendRsib(nd,sdfsel,arg) {\n    let [subsdfsel,nrnd] = _arg2SubAndNrnd(arg)\n    let ndepth = nd._depth\n    subsdfsel = _updateDepth(ndepth,subsdfsel)\n    nrnd._lsibid = nd._id\n    nd._rsibid = nrnd._id\n    nrnd = _nonfstsibize(nrnd)\n    let rdmost = ndfunc.getRdmost(nd,sdfsel)\n    let index = cmmn.afindi('_id',rdmost._id,sdfsel)\n    sdfsel = cmmn.insertl(index+1,subsdfsel,sdfsel)\n    return(sdfsel)\n}\n\nfunction _insertRsib(nd,sdfsel,arg) {\n    let [subsdfsel,nrnd] = _arg2SubAndNrnd(arg)\n    let ndepth = nd._depth\n    subsdfsel = _updateDepth(ndepth,subsdfsel)\n    let rsib = getRsib(nd,sdfsel)\n    rsib._lsibid = nrnd._id\n    nrnd._rsibid = rsib._id\n    nd._rsibid = nrnd._id\n    nrnd._lsibid = nd._id\n    nrnd._rsibid = null\n    nrnd = _nonfstsibize(nrnd)\n    let rdmost = ndfunc.getRdmost(nd,sdfsel)\n    let index = cmmn.afindi('_id',rdmost._id,sdfsel)\n    sdfsel = cmmn.insertl(index+1,subsdfsel,sdfsel)\n    return(sdfsel)\n}\n\n\nfunction addRsib(nd,sdfsel,arg) {\n    if(isRoot(nd)) {\n        console.log(\"rnd  can NOT addRsib\")\n        return(sdfsel)\n    } else {\n        if(isLstsib(nd))  {\n            sdfsel = _lstsibAppendRsib(nd,sdfsel,arg)\n        } else {\n            sdfsel = _insertRsib(nd,sdfsel,arg)\n        }\n    }\n    return(sdfsel)\n}\n\n\n\n////\n\nfunction addFstch(nd,sdfsel,arg) {\n    let [subsdfsel,nrnd] = _arg2SubAndNrnd(arg)\n    let ndepth = nd._depth + 1\n    subsdfsel = _updateDepth(ndepth,subsdfsel)\n    if(isNonLeaf(nd)) {\n        console.log(\"nonleaf  can NOT addFstch\")\n        return(sdfsel)\n    } else {\n        nd._fstchid = nrnd._id\n        nrnd._pid = nd._id\n        nrnd = _fstsibize(nrnd)\n    }\n    let index = cmmn.afindi('_id',nd._id,sdfsel)\n    sdfsel = cmmn.insertl(index+1,subsdfsel,sdfsel)\n    return(sdfsel)\n}\n\n\nfunction _rootize(nd) {\n    nd._lsibid = null\n    nd._rsibid = null\n    nd._pid = null\n    return(nd)\n}\n\nfunction _deUpdateDepth(sdfsel) {\n    let decr = sdfsel[0]._depth\n    sdfsel = sdfsel.map(r=>{\n        r._depth = r._depth - decr\n        return(r)\n    })\n    return(sdfsel)\n}\n\nfunction getDesFstiAndLsti(nd,sdfsel) {\n    let subsdfsel = getAllDesesIncludingSelf(nd,sdfsel)\n    let fsti = cmmn.afindi('_id',subsdfsel[0]._id,sdfsel)\n    let lsti = fsti + subsdfsel.length - 1\n    return([fsti,lsti])\n}\n\nfunction rmFstch(nd,sdfsel) {\n    let subsdfsel;\n    let fstch = getFstch(nd,sdfsel)\n    if(fstch !== null) {\n        let [fsti,lsti] = getDesFstiAndLsti(fstch,sdfsel)\n        subsdfsel = sdfsel.slice(fsti,lsti+1)\n        let sndch = getRsib(fstch,sdfsel)\n        if(sndch === null) {\n            //only-one-child\n            nd = leafize(nd)\n        } else {\n            nd._fstchid = sndch._id\n            sndch._pid = nd._id\n            sndch = _fstsibize(sndch)\n        }\n        subsdfsel = _deUpdateDepth(subsdfsel)\n        fstch = _rootize(fstch)\n        sdfsel = cmmn.secdel(fsti,lsti,sdfsel)\n    } else {\n        subsdfsel = []\n    }\n    return([sdfsel,subsdfsel])\n}\n\n\nfunction rmFstsib(nd,sdfsel) {\n    let fstsib = getFstsib(nd,sdfsel)\n    let p = getParent(fstsib,sdfsel)\n    if(p === null) {\n        return([[],sdfsel])\n    } else {\n        return(rmFstch(p,sdfsel))\n    }\n}\n\nfunction rmRsib(nd,sdfsel) {\n    let subsdfsel;\n    let rsib = getRsib(nd,sdfsel)\n    if(rsib === null){\n        subsdfsel = []\n    } else {\n        let [fsti,lsti] = getDesFstiAndLsti(rsib,sdfsel)\n        subsdfsel = sdfsel.slice(fsti,lsti+1)\n        let rrsib = getRsib(rsib,sdfsel)\n        if(rrsib === null) {\n            nd._rsibid = null \n        } else {\n            nd._rsibid = rrsib._id\n            rrsib._lsibid = nd._id\n        }\n        subsdfsel = _deUpdateDepth(subsdfsel)\n        rsib = _rootize(rsib)\n        sdfsel = cmmn.secdel(fsti,lsti,sdfsel)\n    }\n    return([sdfsel,subsdfsel])\n}\n\n\nfunction rmLstsib(nd,sdfsel) {\n    let lstsib = getLstsib(nd,sdfsel)\n    let sndlstsib = getLsib(lstsib,sdfsel)\n    if(sndlstsib === null) {\n        return(rmFstsib(nd,sdfsel))\n    } else { \n        return(rmRsib(sndlstsib,sdfsel))\n    }\n}\n\nfunction rmLsib(nd,sdfsel) {\n    let subsdfsel;\n    let lsib = getLsib(nd,sdfsel)\n    if(lsib === null){\n        subsdfsel = []\n    } else {\n        let [fsti,lsti] = getDesFstiAndLsti(lsib,sdfsel)\n        subsdfsel = sdfsel.slice(fsti,lsti+1)\n        let llsib = getLsib(lsib,sdfsel)\n        if(llsib === null) {\n            nd._lsibid = null\n            nd._pid = lsib._pid\n            let p = getParent(nd,sdfsel)\n            p._fstchid = lsib._id\n        } else {\n            nd._lsibid = llsib._id\n            llsib._rsibid = nd._id\n        }\n        subsdfsel = _deUpdateDepth(subsdfsel)\n        lsib = _rootize(lsib)\n        sdfsel = cmmn.secdel(fsti,lsti,sdfsel)\n    }\n    return([sdfsel,subsdfsel])\n}\n\n\n////\n////\n////\n\nfunction rmSelf(nd,sdfsel) {\n    let rslt;\n    if(isRoot(nd)) {\n        rslt = [sdfsel,[]]\n    } else if(isFstsib(nd)) {\n        let p = getParent(nd,sdfsel)\n        rslt = rmFstch(p,sdfsel)\n    } else {\n        let lsib = getLsib(nd,sdfsel)\n        rslt =  rmRsib(lsib,sdfsel)\n    }\n    return(rslt)\n}\n\nfunction rmChild(which,nd,sdfsel)  {\n    let child = getChild(which,nd,sdfsel)\n    if(child === null) {\n        return([sdfsel,[]])\n    } else {\n        return(rmSelf(child,sdfsel))\n    }\n}\n\nmodule.exports = {\n    isRoot,\n    isFstch,\n    isFstsib,\n    isFstchButNotLstch,\n    isFstsibButNotLstsib,\n    isLstch,\n    isLstsib,\n    isLstchButNotFstch,\n    isLstsibButNotFstsib,\n    isFstchAndLstch,\n    isFstsibAndLstsib,\n    isMidch,\n    isMidsib,\n    isLeaf,\n    isNonLeaf,\n    isUndefined,\n    havingLsib,\n    havingRsib,\n    idgetnd,\n    eq,\n    newIdPool,\n    newNode,\n    newRoot,\n    newFstsib,\n    newMidsib,\n    newLstsib,\n    leafize,\n    newLeafFstsib,\n    newLeafMidsib,\n    newLeafLstsib,\n    getLsib,\n    getRsib,\n    getPrecedingSibs,\n    getFollowingSibs,\n    getFstsib,\n    getLstsib,\n    getAllSibs,\n    getSib,\n    getFstch,\n    getChild,\n    getChildren,\n    getLstch,\n    getParent,\n    getAllAnces,\n    getAllAncesIncludingSelf,\n    getAnces,\n    getAncesIncludingSelf,\n    getFstAncesHavingRsibIncludingSelf,\n    calcDepth,\n    getDepth,\n    getSibseq,\n    getBreadth,\n    getRsibOfFstAncesHavingRsibIncludingSelf,\n    getRdmost,\n    sdfsNext,\n    sdfsPrev,\n    isAncesOf,\n    isDesOf,\n    isAncesOfIncludingSelf,\n    isDesOfIncludingSelf,\n    getAllDesesIncludingSelf,\n    getAllDeses,\n    getFlatWidth,\n    getFlatOffset,\n    addLsib,\n    addRsib,\n    addFstch,\n    getDesFstiAndLsti,\n    rmFstch,\n    rmFstsib,\n    rmRsib,\n    rmLstsib,\n    rmLsib,\n    rmSelf,\n    rmChild\n}\n\n"],"sourceRoot":""}